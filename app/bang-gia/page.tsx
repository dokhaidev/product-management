"use client"

import React, { useState } from "react";
import { useRouter } from "next/navigation";
import { Home, ArrowLeft, Star, Clock, Shield, CheckCircle } from "lucide-react";

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu v√† ki·ªÉu key
type PricingTabKey = "bonCau" | "bonNuoc" | "pinNangLuong";

type PricingItem = {
  title: string;
  unit: string;
  price: string;
  note: string;
  popular?: boolean;
};

// D·ªØ li·ªáu demo cho b·∫£ng gi√°
const pricingData: Record<PricingTabKey, PricingItem[]> = {
  bonCau: [
    {
      title: "Nh√¢n c√¥ng th√¥ng ngh·∫πt b·ªìn c·∫ßu",
      unit: "c√°i",
      price: "450.000 - 550.000",
      note: "Tr∆∞·ªùng h·ª£p b·ªìn c·∫ßu b·ªã gh·∫πt v·∫≠t r·∫Øn: KhƒÉn v·∫£i, t√≥c, ...",
      popular: true
    },
    {
      title: "Nh√¢n c√¥ng s·ª≠a ch·ªØa b·ªìn c·∫ßu b·ªã ch·∫£y n∆∞·ªõc, kh√¥ng x·∫£ n∆∞·ªõc, r√≤ r·ªâ n∆∞·ªõc,...",
      unit: "c√°i",
      price: "150.000",
      note: "Tr∆∞·ªùng h·ª£p ƒë·ª•c b·ªìn c·∫ßu kƒ© thu·∫≠t s·∫Ω b√°o gi√° cho kh√°ch h√†ng",
    },
    {
      title: "Nh√¢n c√¥ng thay phao b·ªìn c·∫ßu",
      unit: "c√°i",
      price: "150.000 - 250.000",
      note: "T√πy lo·∫°i phao b·ªìn c·∫ßu n√∫t nh·∫•n, tay g·∫°t.",
      popular: true
    },
    {
      title: "Th√°o b·ªìn c·∫ßu c≈©, thay b·ªìn c·∫ßu m·ªõi",
      unit: "c√°i",
      price: "450.000 - 650.000",
      note: "T√πy lo·∫°i ki·ªÉu b·ªìn c·∫ßu",
    },
    {
      title: "L·∫Øp ƒë·∫∑t b·ªô ti·ªÉu nam",
      unit: "c√°i",
      price: "Li√™n h·ªá",
      note: "Gi√° thay ƒë·ªïi t√πy theo lo·∫°i thi·∫øt b·ªã v√† ƒë·ªô ph·ª©c t·∫°p",
    },
  ],
  bonNuoc: [
    {
      title: "S·ª≠a ch·ªØa b·ªìn n∆∞·ªõc inox",
      unit: "c√°i",
      price: "300.000 - 500.000",
      note: "B√°o gi√° c·ª• th·ªÉ sau khi kh·∫£o s√°t t√¨nh tr·∫°ng h∆∞ h·ªèng",
    },
    {
      title: "Thay b·ªìn n∆∞·ªõc m·ªõi",
      unit: "c√°i",
      price: "800.000 - 1.200.000",
      note: "Bao g·ªìm nh√¢n c√¥ng v√† v·∫≠n chuy·ªÉn",
      popular: true
    },
    {
      title: "V·ªá sinh b·ªìn n∆∞·ªõc",
      unit: "c√°i",
      price: "250.000 - 400.000",
      note: "T√πy theo k√≠ch th∆∞·ªõc v√† t√¨nh tr·∫°ng b·ªìn",
    },
  ],
  pinNangLuong: [
    {
      title: "L·∫Øp ƒë·∫∑t h·ªá th·ªëng pin nƒÉng l∆∞·ª£ng 3kW",
      unit: "h·ªá th·ªëng",
      price: "25.000.000 - 35.000.000",
      note: "Bao g·ªìm thi·∫øt b·ªã v√† nh√¢n c√¥ng l·∫Øp ƒë·∫∑t",
      popular: true
    },
    {
      title: "L·∫Øp ƒë·∫∑t h·ªá th·ªëng pin nƒÉng l∆∞·ª£ng 5kW",
      unit: "h·ªá th·ªëng",
      price: "40.000.000 - 55.000.000",
      note: "Ph√π h·ª£p cho h·ªô gia ƒë√¨nh s·ª≠ d·ª•ng nhi·ªÅu ƒëi·ªán",
    },
    {
      title: "B·∫£o tr√¨ h·ªá th·ªëng ƒë·ªãnh k·ª≥",
      unit: "l·∫ßn",
      price: "500.000 - 800.000",
      note: "Ki·ªÉm tra v√† v·ªá sinh to√†n b·ªô h·ªá th·ªëng",
    },
  ],
};

export default function PricingPage() {
  const router = useRouter();
  const [activeTab, setActiveTab] = useState<PricingTabKey>("bonCau");

  const tabs: { id: PricingTabKey; label: string; icon: string }[] = [
    { id: "bonCau", label: "B·ªìn c·∫ßu", icon: "üöΩ" },
    { id: "bonNuoc", label: "B·ªìn n∆∞·ªõc", icon: "üíß" },
    { id: "pinNangLuong", label: "NƒÉng l∆∞·ª£ng", icon: "‚òÄÔ∏è" },
  ];

  const features = [
    { icon: Clock, text: "C√≥ m·∫∑t sau 15 ph√∫t" },
    { icon: Shield, text: "B·∫£o h√†nh 12 th√°ng" },
    { icon: CheckCircle, text: "Cam k·∫øt ch·∫•t l∆∞·ª£ng" },
    { icon: Star, text: "Th·ª£ c√≥ chuy√™n m√¥n" },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white pb-20">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200/60 sticky top-0 z-10">
        <div className="flex items-center p-4">
          <button 
            onClick={() => router.push("/")}
            className="flex items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors mr-4"
          >
            <ArrowLeft className="w-5 h-5" />
          </button>
          <div className="flex items-center gap-3 flex-1">
            <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center shadow-lg">
              <span className="text-white font-bold text-sm">H</span>
            </div>
            <div>
              <h1 className="text-lg font-bold text-gray-900">B·∫£ng gi√° d·ªãch v·ª•</h1>
              <p className="text-xs text-gray-500">ƒêi·ªán n∆∞·ªõc - S·ª≠a ch·ªØa</p>
            </div>
          </div>
          <button 
            onClick={() => router.push("/")}
            className="p-2 rounded-lg bg-blue-50 text-blue-600 hover:bg-blue-100 transition-colors"
          >
            <Home className="w-5 h-5" />
          </button>
        </div>
      </header>

      <div className="p-4">
        {/* Features Grid */}
        <div className="grid grid-cols-2 gap-3 mb-6">
          {features.map(({ icon: Icon, text }, index) => (
            <div key={index} className="bg-white rounded-xl p-3 shadow-sm border border-gray-200/60 flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                <Icon className="w-4 h-4 text-blue-600" />
              </div>
              <span className="text-xs font-medium text-gray-700">{text}</span>
            </div>
          ))}
        </div>

        {/* Tabs */}
        <div className="bg-white rounded-2xl p-1 shadow-sm border border-gray-200/60 mb-6">
          <div className="flex">
            {tabs.map(({ id, label, icon }) => (
              <button
                key={id}
                onClick={() => setActiveTab(id)}
                className={`flex-1 py-3 px-2 rounded-xl text-sm font-medium transition-all ${
                  activeTab === id
                    ? "bg-blue-500 text-white shadow-sm"
                    : "text-gray-600 hover:text-gray-900"
                }`}
              >
                <div className="flex flex-col items-center gap-1">
                  <span className="text-lg">{icon}</span>
                  <span>{label}</span>
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* Pricing Content */}
        <div className="space-y-3">
          {pricingData[activeTab].length === 0 ? (
            <div className="text-center py-10 bg-white rounded-2xl shadow-sm border border-gray-200/60">
              <div className="text-gray-400 text-lg mb-2">üìù</div>
              <p className="text-gray-500 font-medium">ƒêang c·∫≠p nh·∫≠t d·ªØ li·ªáu</p>
              <p className="text-sm text-gray-400 mt-1">Vui l√≤ng quay l·∫°i sau</p>
            </div>
          ) : (
            pricingData[activeTab].map(({ title, unit, price, note, popular }, index) => (
              <div
                key={index}
                className="bg-white rounded-2xl shadow-sm border border-gray-200/60 p-4 hover:shadow-md transition-shadow"
              >
                {popular && (
                  <div className="flex items-center gap-1 mb-3">
                    <Star className="w-4 h-4 text-yellow-500 fill-yellow-500" />
                    <span className="text-xs font-medium text-yellow-700 bg-yellow-50 px-2 py-1 rounded-full">
                      D·ªãch v·ª• ph·ªï bi·∫øn
                    </span>
                  </div>
                )}
                
                <div className="flex items-start justify-between mb-2">
                  <h3 className="font-semibold text-gray-900 text-sm leading-tight flex-1 pr-2">
                    {title}
                  </h3>
                  {price !== "Li√™n h·ªá" ? (
                    <div className="text-right">
                      <div className="text-green-600 font-bold text-lg">
                        {price.replace(/\B(?=(\d{3})+(?!\d))/g, ".")}ƒë
                      </div>
                      <div className="text-xs text-gray-500">/{unit}</div>
                    </div>
                  ) : (
                    <div className="bg-blue-50 text-blue-600 px-3 py-1 rounded-full text-sm font-semibold">
                      Li√™n h·ªá
                    </div>
                  )}
                </div>

                <div className="text-xs text-gray-500 mb-2">ƒê∆°n v·ªã: {unit}</div>
                
                {note && (
                  <div className="text-xs text-gray-600 bg-gray-50 rounded-lg px-3 py-2 border border-gray-200">
                    üí° {note}
                  </div>
                )}

                <button className="w-full mt-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white py-2 rounded-xl font-semibold text-sm hover:shadow-lg transition-all active:scale-95">
                  ƒê·∫∑t d·ªãch v·ª• ngay
                </button>
              </div>
            ))
          )}
        </div>

        {/* Contact Banner */}
        <div className="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-4 text-white mt-6 shadow-lg">
          <h3 className="font-bold text-lg mb-2">üìû C·∫ßn t∆∞ v·∫•n th√™m?</h3>
          <p className="text-sm opacity-90 mb-3">Li√™n h·ªá ngay ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ mi·ªÖn ph√≠</p>
          <div className="flex gap-2">
            <button className="flex-1 bg-white text-blue-600 py-2 rounded-xl font-semibold text-sm hover:bg-blue-50 transition-colors">
              G·ªçi ngay
            </button>
            <button className="flex-1 bg-transparent border border-white py-2 rounded-xl font-semibold text-sm hover:bg-white/10 transition-colors">
              Nh·∫Øn tin
            </button>
          </div>
        </div>
      </div>

      {/* Bottom Navigation */}
      <nav className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 flex justify-around py-3 shadow-lg">
        <button 
          onClick={() => router.push("/")}
          className="flex flex-col items-center gap-1 text-xs text-blue-600"
        >
          <div className="p-2 rounded-lg bg-blue-50">
            <Home className="w-6 h-6" />
          </div>
          <span className="font-medium">Trang ch·ªß</span>
        </button>
        
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Clock className="w-6 h-6" />
          </div>
          <span className="font-medium">L·ªãch s·ª≠</span>
        </button>
        
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Star className="w-6 h-6" />
          </div>
          <span className="font-medium">Y√™u th√≠ch</span>
        </button>
        
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Shield className="w-6 h-6" />
          </div>
          <span className="font-medium">T√†i kho·∫£n</span>
        </button>
      </nav>
    </div>
  );
}