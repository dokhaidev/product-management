"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { Calendar, MapPin, Wrench, ArrowLeft, Home, Search, Clock, Shield, Star, CheckCircle } from "lucide-react";

export default function DienNuocPage() {
  const router = useRouter();
  const [selectedService, setSelectedService] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState("");

  const services = [
    { name: "S·ª≠a m·∫•t ƒëi·ªán", icon: "‚ö°", popular: true },
    { name: "S·ª≠a ch·∫≠p ƒëi·ªán", icon: "üîå", popular: true },
    { name: "S·ª≠a r√≤ r·ªâ ƒëi·ªán", icon: "‚ö†Ô∏è" },
    { name: "T·∫Øc ngh·∫Ωn b·ªìn c·∫ßu", icon: "üöΩ", popular: true },
    { name: "S·ª≠a ch·ªØa ·ªëng n∆∞·ªõc", icon: "üîß" },
    { name: "S·ª≠a b√¨nh n√≥ng l·∫°nh", icon: "üî•", popular: true },
    { name: "Thay th·∫ø v√† l·∫Øp ƒë·∫∑t lavabo", icon: "üíß" },
    { name: "V·ªá sinh b·ªìn n∆∞·ªõc", icon: "üßº" },
    { name: "L·∫Øp ƒë·∫∑t ·ªï c·∫Øm ƒëi·ªán", icon: "üîò" },
    { name: "S·ª≠a c√¥ng t·∫Øc h·ªèng", icon: "üéõÔ∏è" },
    { name: "Thay th·∫ø ƒë√®n chi·∫øu s√°ng", icon: "üí°" },
    { name: "S·ª≠a m√°y b∆°m n∆∞·ªõc", icon: "‚õ≤" },
  ];

  const filteredServices = services.filter(service =>
    service.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const features = [
    { icon: Clock, text: "C√≥ m·∫∑t sau 15 ph√∫t" },
    { icon: Shield, text: "B·∫£o h√†nh 12 th√°ng" },
    { icon: CheckCircle, text: "Cam k·∫øt ch·∫•t l∆∞·ª£ng" },
    { icon: Star, text: "Th·ª£ c√≥ chuy√™n m√¥n" },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white pb-20">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200/60 sticky top-0 z-10">
        <div className="flex items-center p-4">
          <button 
            onClick={() => selectedService ? setSelectedService(null) : router.push("/")}
            className="flex items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors mr-4"
          >
            <ArrowLeft className="w-5 h-5" />
          </button>
          <div className="flex items-center gap-3 flex-1">
            <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center shadow-lg">
              <Wrench className="w-5 h-5 text-white" />
            </div>
            <div>
              <h1 className="text-lg font-bold text-gray-900">D·ªãch v·ª• ƒêi·ªán n∆∞·ªõc</h1>
              <p className="text-xs text-gray-500">S·ª≠a ch·ªØa nhanh ch√≥ng</p>
            </div>
          </div>
          <button 
            onClick={() => router.push("/")}
            className="p-2 rounded-lg bg-blue-50 text-blue-600 hover:bg-blue-100 transition-colors"
          >
            <Home className="w-5 h-5" />
          </button>
        </div>
      </header>

      <div className="p-4">
        {/* Features Grid */}
        <div className="grid grid-cols-2 gap-3 mb-6">
          {features.map(({ icon: Icon, text }, index) => (
            <div key={index} className="bg-white rounded-xl p-3 shadow-sm border border-gray-200/60 flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                <Icon className="w-4 h-4 text-blue-600" />
              </div>
              <span className="text-xs font-medium text-gray-700">{text}</span>
            </div>
          ))}
        </div>

        {/* N·∫øu ch∆∞a ch·ªçn d·ªãch v·ª• */}
        {!selectedService && (
          <div className="space-y-4">
            {/* Search Bar */}
            <div className="relative">
              <Search className="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
              <input
                type="text"
                placeholder="T√¨m ki·∫øm d·ªãch v·ª• ƒëi·ªán n∆∞·ªõc..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="w-full rounded-xl pl-12 pr-4 py-3 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 text-gray-900 placeholder:text-gray-500 shadow-sm"
              />
            </div>

            {/* Services Grid */}
            <div className="bg-white rounded-2xl p-4 shadow-sm border border-gray-200/60">
              <h2 className="text-lg font-bold text-gray-900 mb-4">Ch·ªçn d·ªãch v·ª• b·∫°n c·∫ßn</h2>
              <div className="grid grid-cols-2 gap-3">
                {filteredServices.map((service) => (
                  <button
                    key={service.name}
                    onClick={() => setSelectedService(service.name)}
                    className="flex flex-col items-center gap-3 p-4 rounded-xl border border-gray-200 bg-white hover:bg-blue-50 hover:border-blue-200 transition-all active:scale-95 group"
                  >
                    <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center text-white text-lg shadow-lg group-hover:scale-110 transition-transform">
                      {service.icon}
                    </div>
                    <span className="text-sm font-medium text-gray-900 text-center leading-tight">
                      {service.name}
                    </span>
                    {service.popular && (
                      <div className="absolute -top-1 -right-1">
                        <div className="bg-red-500 text-white text-xs px-2 py-1 rounded-full">
                          HOT
                        </div>
                      </div>
                    )}
                  </button>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* N·∫øu ƒë√£ ch·ªçn d·ªãch v·ª• */}
        {selectedService && (
          <div className="space-y-4">
            {/* Service Header */}
            <div className="bg-white rounded-2xl p-4 shadow-sm border border-gray-200/60">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center text-white text-lg shadow-lg">
                  {services.find(s => s.name === selectedService)?.icon}
                </div>
                <div>
                  <h2 className="text-lg font-bold text-gray-900">{selectedService}</h2>
                  <p className="text-sm text-gray-500">D·ªãch v·ª• chuy√™n nghi·ªáp</p>
                </div>
              </div>

              <div className="space-y-4">
                {/* Service Type Selection */}
                <div>
                  <label className="block text-gray-700 font-semibold mb-3">
                    Lo·∫°i h√¨nh d·ªãch v·ª•
                  </label>
                  <div className="space-y-2">
                    <label className="flex items-start gap-3 p-3 border border-gray-200 rounded-xl hover:bg-blue-50 hover:border-blue-200 transition-colors cursor-pointer">
                      <input type="radio" name="serviceType" className="mt-1 accent-blue-500" defaultChecked />
                      <div>
                        <span className="font-medium text-gray-900">T∆∞ v·∫•n v√† b√°o gi√°</span>
                        <p className="text-xs text-gray-500 mt-1">Nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠ v√† b√°o gi√° chi ti·∫øt tr∆∞·ªõc khi s·ª≠a ch·ªØa</p>
                      </div>
                    </label>
                    <label className="flex items-start gap-3 p-3 border border-gray-200 rounded-xl hover:bg-blue-50 hover:border-blue-200 transition-colors cursor-pointer">
                      <input type="radio" name="serviceType" className="mt-1 accent-blue-500" />
                      <div>
                        <span className="font-medium text-gray-900">S·ª≠a ch·ªØa kh·∫©n c·∫•p</span>
                        <p className="text-xs text-gray-500 mt-1">T√¨m th·ª£ c√≥ m·∫∑t ngay trong 15 ph√∫t</p>
                      </div>
                    </label>
                  </div>
                </div>

                {/* Address */}
                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    ƒê·ªãa ch·ªâ th·ª±c hi·ªán
                  </label>
                  <div className="flex items-start gap-3 p-3 border border-gray-200 rounded-xl bg-white">
                    <MapPin className="w-5 h-5 text-blue-600 mt-0.5 flex-shrink-0" />
                    <textarea
                      placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ chi ti·∫øt..."
                      className="flex-1 outline-none text-gray-700 placeholder-gray-400 resize-none"
                      rows={2}
                    />
                  </div>
                </div>

                {/* Phone Number */}
                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá
                  </label>
                  <div className="flex items-center p-3 border border-gray-200 rounded-xl bg-white">
                    <span className="bg-gray-100 px-3 py-2 rounded-lg text-gray-600 font-medium border-r border-gray-300 mr-3">+84</span>
                    <input
                      type="tel"
                      placeholder="S·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n"
                      className="flex-1 outline-none text-gray-700 placeholder-gray-400"
                    />
                  </div>
                </div>

                {/* Schedule */}
                <div>
                  <label className="block text-gray-700 font-semibold mb-3">
                    Th·ªùi gian th·ª±c hi·ªán
                  </label>
                  <div className="grid grid-cols-2 gap-3">
                    <div className="flex items-center gap-3 p-3 border border-gray-200 rounded-xl bg-white">
                      <Calendar className="w-5 h-5 text-blue-600 flex-shrink-0" />
                      <input
                        type="date"
                        className="flex-1 outline-none text-gray-700"
                      />
                    </div>
                    <div className="flex items-center gap-3 p-3 border border-gray-200 rounded-xl bg-white">
                      <Clock className="w-5 h-5 text-blue-600 flex-shrink-0" />
                      <input
                        type="time"
                        className="flex-1 outline-none text-gray-700"
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-white rounded-2xl p-4 shadow-sm border border-gray-200/60">
              <div className="flex justify-around">
                <button className="flex flex-col items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors">
                  <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center text-lg">
                    üí∞
                  </div>
                  <span className="text-xs font-medium">∆Øu ƒë√£i</span>
                </button>
                <button className="flex flex-col items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors">
                  <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center text-lg">
                    ‚ÑπÔ∏è
                  </div>
                  <span className="text-xs font-medium">Th√¥ng tin</span>
                </button>
                <button className="flex flex-col items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors">
                  <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center text-lg">
                    ‚≠ê
                  </div>
                  <span className="text-xs font-medium">ƒê√°nh gi√°</span>
                </button>
              </div>
            </div>

            {/* Action Buttons */}
            <div className="flex gap-3">
              <button
                onClick={() => setSelectedService(null)}
                className="flex-1 py-3 px-6 border border-gray-300 rounded-xl font-semibold text-gray-700 hover:bg-gray-50 transition-colors"
              >
                Quay l·∫°i
              </button>
              <button
                onClick={() => {
                  alert("ƒê·∫∑t d·ªãch v·ª• th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i trong √≠t ph√∫t.");
                  router.push("/");
                }}
                className="flex-1 py-3 px-6 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl font-semibold hover:shadow-lg transition-all active:scale-95"
              >
                ƒê·∫∑t d·ªãch v·ª• ngay
              </button>
            </div>
          </div>
        )}
      </div>

      {/* Bottom Navigation */}
      <nav className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 flex justify-around py-3 shadow-lg">
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Wrench className="w-6 h-6" />
          </div>
          <span className="font-medium">D·ªãch v·ª•</span>
        </button>
        
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Clock className="w-6 h-6" />
          </div>
          <span className="font-medium">L·ªãch s·ª≠</span>
        </button>
        
        <button 
          onClick={() => router.push("/")}
          className="flex flex-col items-center gap-1 text-xs text-blue-600"
        >
          <div className="p-2 rounded-lg bg-blue-50">
            <Home className="w-6 h-6" />
          </div>
          <span className="font-medium">Trang ch·ªß</span>
        </button>
        
        <button className="flex flex-col items-center gap-1 text-xs text-gray-500">
          <div className="p-2 rounded-lg">
            <Star className="w-6 h-6" />
          </div>
          <span className="font-medium">Y√™u th√≠ch</span>
        </button>
      </nav>
    </div>
  );
}